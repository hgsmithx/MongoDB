show dbs

use mycustomers

db.createUser({
  user: 'fazt',
  pwd: '123',
  roles: ['readWrite', 'dbAdmin']
});

db.createCollection('customers')

show collections

db.customers.insert(
  {
    firstName: 'Isaac',
    lastName: 'Asimov'
  }
)

db.customers.find()
  .pretty()

db.customers.insert(
  [
    {firstName: 'Joe', lastName: 'MacMillan'},
    {firstName: 'Elena', lastName: 'Soraya'},
    {firstName: 'Isaac', lastName: 'delahaye'}
  ]
)

db.customers.find();
db.customers.find({firstName: 'Joe'}, {firstName: true, lastName:false});

// replace or update data
db.customers.update(
  {firstName: 'Joe'}, //query
  {
    firstName: 'Joe',
    lastName: 'MacMillan',
    gender: 'male'
  } // new data
);

// add a new date
db.customers.update(
  {firstName: 'Isaac'},
  {
    $set: {gender: 'male'}
  }
);

db.customers.update(
  {firstName: 'Isaac'},
  {
    $set: {age: 45}
  }
);
db.customers.update(
  {firstName: 'Isaac'},
  {
    $inc: {age: 5}
  }
);

db.customers.update(
  {firstName: 'Isaac'},
  {
    $unset:  {age: 1}
  }
)

db.customers.update(
  {firstName: 'Elena'} ,
  {
    firstName: 'Elena',
    lastName: 'Soraya'
  },
  { upsert: true}
)

db.customers.update(
  {firstName: 'Isaac'},
  {
    $rename: {"gender": "sex"}
  }
)

db.customers.remove({firstName: "Isaac"})
db.customers.remove({firstName: "Isaac"}, {justOne: true})

db.customers.find({firstName: "Elena"});
db.customers.find({$or: [{firstName: "Elena"}, {firstName: "Isaac"}]})
db.customers.fid({gender: "male"})

db.customers.find({age: {$lt: 40}})
db.customers.find({age: {$gt: 40}})
db.customers.find({age: {$gt: 30, $lt: 90}});

db.customers.find({"address.city": "Boston"})

db.customers.find({name: {$regex: 'ston'}});

// sorting
db.customers.find().sort({lastName: 1});
db.customers.find().sort({lastName: -1});
db.customers.find().count()
db.customers.find({gender: "male"}).count()
db.customers.find().limit(4)
db.customers.find().limit(4).sort({lastName: -1})

db.customers.find().forEach(function(doc) {
  print("Customer Name" + doc.firstName);
});

+----------------------------------------------------+------------------------------------------------------------------------------------------------------------+
|                      comando                       |                                                   acci贸n                                                   |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------------+
| mongod                                             | inicia el servidor de mongodb, deja el servicio corriendo                                                  |
| mongo                                              | para ejecutar comandos de mongo, habilita el shell propio de mongo                                         |
| show dbs                                           | muestra las bases de datos, (como show databases en mysql)                                                 |
| db                                                 | indica la base de datos a la que se ha conectado                                                           |
| use <nombrebd>                                     | cambia la conexi贸n actual a la bd <nombrebd>                                                               |
| db.createUser()                                    | crea un usuario, muestra Successfully added user:<el json>                                                 |
| db.clientes.insert()                               | indica que <bd actual>.<coleccion>.<haz un isnert de>() seria como: INSERT INTO clientes (...) VALUES(...) |
| db.clientes.find()                                 | SELECT * FROM clientes                                                                                     |
| db.clientes.insert([...])                          | hace un bulk insert como INSERT INTO ... VALUES (...),(...)(...);                                          |
| db.clientes.find({firstName:"Isaac"})              | SELECT * FROM clientes WHERE firstName='Isaac'                                                             |
| db.clientes.update({.condicion.},{nuevos valores}) | UPDATE clientes SET nuevos valores WHERE condicion                                                         |
| db.clientes.find().pretty()                        | Muestra los datos formateados para mejor legibilidad                                                       |
| $set                                               | seria como un alter table de agregaci贸n de campo                                                           |
| $inc                                               | seria como una funcion preprogramada                                                                       |
| $unset                                             | seria como un alter table de eliminacion de campo                                                          |
| upsert                                             | Flag que indica que si no existe el registro lo inserta y si existe lo actualia                            |
| $rename                                            | alter table de un nombre de campo                                                                          |
| db.clientes.remove({condicion})                    | es como un DELETE FROM clientes WHERE <condici贸n>                                                          |
| $or                                                | condicional OR                                                                                             |
| $regex                                             | Se podria entender como el LIKE                                                                            |
| find().sort()                                      | Es la ordenacion como hace ORDER BY, el -1 es el DESC                                                      |
| find().count()                                     | Es el COUNT(*)                                                                                             |
| find().limit(iN)                                   | Es el LIMIT                                                                                                |
| find().forEach()                                   |                                                                                                            |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------------+
